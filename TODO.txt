1. Make navbar and its js logic reusable components. X
2. Complete input validation for login and signup. X
3. Style the login page better. X
4. Match express sessions with userIDs to better track across site. X
5. Game logic X
    Game class - decide what should stay in the game class and what should be in server?
        perhaps all active game state data should be in server, all methods should be in game class.

    UpdateGame method
        1. playTile
            1. Tile Placer - search (done) 
        2. End Game
6. Connect frontend to game logic. X
7. Document client js
8. Disaster recovery
    A. Save games in database. (async)
    B. On server start, load games from database
10. Maintain net worth calculation. X
11. Allow multiple active sessions?


12. Limit client actions to correct turn X
13. Initial tile distribution X
14. networth/endgame X
15. Limit Share buying by cash and bank shares X
16. Tile bank clicking and modification X
17. Fix price stats after mergers X
18. Share disposal - server X
19. Share disposal - client X
20. In the event of a >=3-way merger where >=2 eliminated chains are of equal size, merging player should choose order of eliminations. X
21. Advanced test cases
22. Handle empty tile bank X
23. Handle all tiles dead or asleap X

24. Better encapsulate server-side websocket logic

25. Share disposal order bug X (refer to https://github.com/thetateman/Acquire/commit/cc41bbeb32031faf20a4e9805cf4186521be76ba game.js:119)

26. Bug: users added to game list w/o joining game.

27. Minor bug: clicking tile on puchase phase returns total to $0

########### COMPUTER MOVES ##############
1. On update failure, retry with different move.
2. Gracefully handle errors in move computation.
